---
interface Props {
	variant?: 'primary' | 'secondary' | 'outline';
	size?: 'sm' | 'md' | 'lg';
	href?: string;
	type?: 'button' | 'submit' | 'reset';
	class?: string;
}

const { 
	variant = 'primary', 
	size = 'md', 
	href, 
	type = 'button',
	class: className = '',
	...props 
} = Astro.props;

const baseClasses = 'inline-flex items-center justify-center font-medium rounded-lg transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2';

const variantClasses = {
	primary: 'bg-blue-600 text-white hover:bg-blue-700 focus:ring-blue-500',
	secondary: 'bg-gray-600 text-white hover:bg-gray-700 focus:ring-gray-500',
	outline: 'border border-gray-300 text-gray-700 hover:bg-gray-50 focus:ring-blue-500',
};

const sizeClasses = {
	sm: 'px-3 py-2 text-sm',
	md: 'px-4 py-2 text-base',
	lg: 'px-6 py-3 text-lg',
};

const classes = `${baseClasses} ${variantClasses[variant]} ${sizeClasses[size]} ${className}`;

const Element = href ? 'a' : 'button';
---

<Element 
	class={classes}
	href={href}
	type={!href ? type : undefined}
	{...props}
>
	<slot />
</Element>
